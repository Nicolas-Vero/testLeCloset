import {ActionReducerMapBuilder, createReducer} from '@reduxjs/toolkit';
import {
  fetchStart,
  fetchSuccess,
  fetchFail,
  addToMyTeam,
  RemoveOfMyTeam,
} from '../action';

export type Player = {
  id: number;
  first_name: string;
  last_name: string;
  email: string;
  avatar: string;
};

// must be generated by grapqh schema

export interface HomeState {
  loading: boolean;
  players: any[];
  teamLength: number;
}

const initialState: HomeState = {
  loading: false,
  players: [],
  teamLength: 0,
};

const homeReducer = createReducer(
  initialState,
  (builder: ActionReducerMapBuilder<HomeState>) => {
    builder.addCase(fetchStart, (state: HomeState) => {
      state.loading = true;
    });
    builder.addCase(fetchSuccess, (state: HomeState, action) => {
      state.loading = false;
      state.players = action.payload.players;
    });

    builder.addCase(fetchFail, (state: HomeState) => {
      state.loading = false;
    });
    builder.addCase(addToMyTeam, (state: HomeState, action) => {
      state.players.map(player => {
        if (player.id === action.payload.players.id) {
          player.InMyTeam = true;
          return player;
        }
      });
      state.teamLength += 1;
    });
    builder.addCase(RemoveOfMyTeam, (state: HomeState, action) => {
      state.players.forEach(player => {
        if (player.id === action.payload.players.id) {
          player.InMyTeam = false;
        }
      });
      state.teamLength -= 1;
    });
  },
);

export default homeReducer;
